Issirinkti duomenu struktura (list of data structures wikipedia). Turi buti unikalus.

Padaryt Abstraktu duomenu tipa. T.y. parasyt klase, su atitinkamais metodais CRUD, gali but create, destroy. 

Padaryt header faila su apsauga nuo pakartotinio itraukimo, kuriam yra dokumentacija.

Viskas realizacijos faile, naudot konstantas ir sinonimus, skirti operacijas i modifikatorius. Privalu mesti isimtis. Ismeta klase o pagaut testuose, maine.

Maina ikisti i try catch bloka su ...(gaudomi nenumatyti exceptionai).

Sukurti savo isimties klase, savo projekta deti i savo namespace(bet koks vardas). 

Maine turi buti demonstracija be jokio ivedimo, gale tikrinti ar visi objektai sekmingai sunaikinti.

Issiaiskint kas yra pointer to implementation. Viesa neisbaikta realizacijos klase kuri nurodo i pilna realizacijos klase. headeri visi viesi metodai isskyrus nuoroda

Padaryt gilu kopijavima. Parasyt operatorius vienas vienvietis vienas dvivietis( leidzia daryt add ir delete). container += element

+=,-= - add/delete, ~ - update, ! - isvalyt konteineri, { - paieska( gauna value, grazinam boolean tik masyve), liste ivedam numeri, grazinam value.

galima daryt iteratoriu - 14 min aiskinimas.

Vienas main - demo, kitas main - testai. iskviest visas operacijas po karta. padarius modifikacija assertas turi patikrinti.

toString viena eilute, jeigu daugiau tada ivest kazka kita.

Parasyt makefile, kuris leidzia subuildint tik klases koda, tada leidzia sulinkint, galima atskirai subuildint demo ir testus, galima atskirai subuildint testus, tada clean ir rebuild. 5-6 targetai.

Testu rezultatai turi atsirasti ekrane ir faile.

Projekto failo rinkinys: antraaste .h, realizacija .cpp, demo.cpp(demonstracija), test.cpp(testai), makefile(instrukcijos).

Viename kataloge visi failai.

Testavimas:

ikelti i VMA tam tikrus failus, paleisti failu testa. parsisiusti kolegos darba paleisti maina ir gauta log ikelti i vma.